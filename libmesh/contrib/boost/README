Instructions for upgrading the subset of Boost headers distributed
with libmesh:

.) Download and unpack the newest boost source distribution to e.g.
   /path/to/unpacked/boost/boost_1_XY_Z

.) Using the test_boost.cc file located in this directory, run

   $CXX -I/path/to/unpacked/boost/boost_1_XY_Z test_boost.cc

   where $CXX is any C++ compiler, for example the one that you will
   use to build libmesh.  If this step does not work, then something
   has changed in boost (for example, the header-only requirement
   might have changed) and you will need to investigate further before
   upgrading libmesh to this version.

.) Use bcp to copy just the header files that libmesh requires to a
   separate "boostcopy" directory
   cd /path/to/unpacked/boost/boost_1_XY_Z
   ./b2 tools/bcp
   mkdir ./boostcopy
   ./dist/bin/bcp boost/move/unique_ptr.hpp \
                  boost/shared_ptr.hpp \
                  boost/pool/pool.hpp \
                  boost/pool/object_pool.hpp \
                  boost/pool/pool_alloc.hpp \
                  ./boostcopy

.) Remove all the existing boost headers from libmesh.
   git rm -r contrib/boost/include/boost

.) Copy the header files from boostcopy into libmesh.
   cp -R /path/to/unpacked/boost/boost_1_XY_Z/boostcopy/boost contrib/boost/include/

.) Verify that test_boost.cc can be compiled with the subset of boost
   headers we just copied in.
   $CXX -I$LIBMESH_ROOT/contrib/boost/include test_boost.cc

.) Currently there are .hpp, .ipp, and .h files in the copy of boost.  You can
   verify this is the case by running the two commands:
   find . -name "*.hpp" -or -name "*.ipp" -or -name "*.h" | wc -l
   find . -type f | wc -l
   and comparing the resulting number of files.  When I did this,
   there was also a single .pl file, but I ended up removing that
   from the distribution before committing the headers.

.) Delete trailing whitespace from the boost headers.
   find . -type f | xargs perl -pli -e 's/\s+$//'

.) Commit these changes.
   git ci -a -m"Updating boost."

.) Update contrib/boost/include/Makefile.am with the list of files:
   cd $LIBMESH_ROOT/contrib/boost/include
   find boost -type f > file_list.txt
   (copy the list of files into Makefile.am with trailing backslashes)

.) If you are bumping the minimum required version of Boost for libmesh,
   set the new minimum version in two places in m4/boost.m4.

.) Run boostrap in the top level of the libmesh source distribution to
   regenerate Makefile.in.  Commit Makefile.in.

.) Follow the normal instructions to make and install libmesh, and
   verify that test_boost.cc can be built against the boost installed
   with libmesh.  You can do this, for example, with the
   Makefile.test_boost included in this directory by typing:

   make -f Makefile.test_boost test_boost
